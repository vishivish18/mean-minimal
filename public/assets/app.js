angular.module("app",["ngRoute","ui.router"]),angular.module("app").controller("homeCtrl",["$scope","$http",function(t,e){t.setup=function(){},t.setup()}]),angular.module("app").controller("masterCtrl",["$scope","$rootScope",function(t,e){console.log("masterCtrl")}]),angular.module("app").controller("navCtrl",["$scope","$location",function(t,e){t.logout=function(){}}]),angular.module("app").config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,l){e.otherwise("/"),t.state("app",{url:"/",views:{header:{templateUrl:"/nav.html",controller:"navCtrl"},content:{templateUrl:"/home.html"}}}).state("app.clientslist",{url:"clientslist",views:{"content@":{templateUrl:"clients/clients.html",controller:"clientsCtrl"}}}).state("app.clientslist.new",{url:"/new",views:{"content@":{templateUrl:"clients/newClient.html",controller:"newClientCtrl"}}}).state("app.clientslist.edit",{url:"/edit/:id",views:{"content@":{templateUrl:"clients/editClient.html",controller:"editClientCtrl"}}}).state("app.dashboard",{url:"dashboard",authenticate:!0,views:{"content@":{templateUrl:"home.html"}}}),l.html5Mode(!0)}]),angular.module("app").controller("clientsCtrl",["$scope","$http",function(t,e){t.setup=function(){e.get("http://localhost:1818/botsupply/admin/clients").then(function(e){t.clients=e.data,console.log(e)})},t.setup()}]),angular.module("app").controller("editClientCtrl",["$scope","$http","$location","$stateParams",function(t,e,l,n){t.setup=function(){e.get("http://localhost:1818/botsupply/admin/client/edit/"+n.id).then(function(e){console.log(e);var l=e.data[0];t.clientName=l.clientName,t.brief=l.brief,t.domain=l.domain,t.users=l.users})},t.setup()}]),angular.module("app").controller("newClientCtrl",["$scope","$http","$location",function(t,e,l){t.create=function(){e.post("http://localhost:1818/botsupply/admin/client/new",{clientName:t.clientName,brief:t.brief,domain:t.domain,email:t.email,name:t.name,password:t.password,options:t.plan}).then(function(t){console.log(t),l.path("/clientslist/edit/"+t.data._id)})}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
